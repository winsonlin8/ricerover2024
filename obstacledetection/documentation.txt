/*
For every meeting, put your documentation above the previous one. 
For things that are relatively complicated or are a long process 
(setting up raspberry pi, connecting to motor drivers), make a 
separate document and put the steps into there. The hallmark of 
good documentation is that someone who has no idea about anything 
related to your project can learn about and replicate it.
*/
11/19/24 (Israel)
- Worked on installing Ubuntu 22.04 on my laptop with dualboot
  - When allocating space for the Ubuntu installation on my drive via Windows Disk Management, I faced an issue that wouldn't allow me to allocate more than 341 MB (way too low for Ubuntu, as it requires 5 GB just to install it)
  - Apparently there was "immovable files" that were continously being updated as my computer was running, such as the hibernation sys file (used for Windows hibernation; hiberfil.sys in C:/ root) and the pagefile (used to improve Windows stability; pagefile.sys in C:/ root)
  - To resolve this, I was going to defragment my drive (which physically moves these "immovable files" out of the way to make space for the Ubuntu partition), but realized that defragging a solid state drive (basically what's on all modern laptops) is a bad idea; defrag should only be used on hard disk drives (the ones with spinning magnetic disks)
  - Instead, I disabled Windows' system restore point, system protection, hibernation, kernel memory dump, and USN journal (probably SHOULD NOT delete this, bc it's used for search indexing and Windows Defender indexing; see https://superuser.com/questions/819901/dangers-of-deleting-c-extend-usnjrnljdata)
  -  This allowed me to get 46000 MB (45 gigs) of space for Ubuntu, which is enough for me ig
  -  If this happens to you, see https://www.download3k.com/articles/How-to-shrink-a-disk-volume-beyond-the-point-where-any-unmovable-files-are-located-00432 for a tutorial on how to disable that stuff then reenable it after Ubuntu installation
- I also needed to disable Secure Boot and BitLocker drive encryption before installing Ubuntu. These can be done with a quick Google search.
- These are the dualboot tutorials I used: 
  - https://adamtheautomator.com/install-ubuntu-on-a-partition/
  - https://www.download3k.com/articles/How-to-shrink-a-disk-volume-beyond-the-point-where-any-unmovable-files-are-located-00432
- I've already made a bootable USB (SanDisk 128 GB usb stick in the box with the raspberry PI), so skip the Rufus steps
- Now I'm able to choose between Windows and Ubuntu via Ubuntu's GRUB bootloader on laptop boot.
- New USB cable for RealSense Camera fixed Eric's below issue


11/6/24 (Eric)
- Got the camera working on the windows computer with 15 fps pretty effectively
- The issue was we had to click "Enable Firmware Logging" in order for it to work better
- also diagnosed the issue as the usb cable can't transfer the data fast enough--it recognizes the camera as a usb2.1 connection, not 3.2 like it should be
- Put an order request for a usb 3.2 cable for the camera
- currently able to display a point cloud in the realsense viewer software

10/30/24 (Eric)
- tried setting up surface matching in python
- realsense cam needs libraries on mac
  - having issues downloading it
  - it requires python 3.7, which is deprecated for conda on macs, have to use pyenv instead
  - realsense sdk download having issues as well
    - https://github.com/IntelRealSense/librealsense/blob/master/doc/installation_osx.md 
    - idk why it's not working

10/28/24 (Eric + Simar)
- Researched a method using OpenCV called Surface Matching
  - It creates a map of objects and obstacles of a 3d scene using a depth sensing camera
  - we need the camera to work before we can implement it, found out the usb cable is the issue
    - it kinda works on the lab computer

10/23/24 (Israel)
- Went through tutorials for Webots to prepare a custom Rover model.
- Also tried running the camera on a different laptop (high performance with an RTX 4050) but it still didn't work
  - I could only get the first frame to display, with the depth and RGB camera window showing the first frame
  - Could be an issue with the cable, since the RealSense software detects it as a USB 2.1 cable. EDIT: RealSense GitHub FAQ says a USB 3.0 connection is required for the camera to work properly.
  - definitely an issue with USB cable, since I got a bunch of "USB SCP Overflow" (too much info for the USB cable to handle) upon checking error logs
    - https://github.com/intelrealsense/librealsense/wiki/troubleshooting-q%26a#q-i-connected-the-camera-to-the-usb-port-but-it-is-not-recognized
  - I don't have a USB 3.2 cable to test with

10/23/24 (Eric + Simar)
- Tried running camera on raspberry pi, it crashed the whole pi
- not nearly enough specs to run the camera
- researching how to do obstacle detection on rough terrain
  - could try depth plane-fitting with the depth sensing camera
  - could try YOLO for image obstacle detection for the ice

10/23/24 (Winson)
- made moon
  - looks bad bc it's green and I think the rover will still fall through
  - will keep working on it
- made ice block
  - i think the ice blocks will only work locally, I will upload the ice jpg I used later

10/21/24 (Eric)
- Tried running ros2 on raspberry pi
- if running into issue with ros2 not working do this: 
  - echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
  - source ~/.bashrc
- camera not displaying on raspberry pi, may be due to high resolution (480 x 240) might be too much unfortunately
  - camera is recognized, but can't display

10/16/24 (Winson)
- started using Webots without ROS
- used existing moon simulation
- need to add obstacles
- sojouner keeps falling through the moon
  - next meeting, make our own moon

10/9/2024 (Eric)
- Attempted to fix openCV display issues
  - not firewall issue
  - not image sending issue
  - can't display window through ros2 for some reason, that seems to be the only issue
    - maybe it's an ubuntu vm issue or an ssh forwarding issue, but it just can't open the window

10/7/2024 (winson)
- tried to get gazebo and webots up
- documented both my efforts here: 
  - Gazebo: https://docs.google.com/document/d/1VhbPSCJuqp6pfLCHEYAJm6LyN3EDYJzz1D0w2VvSqWE/edit 
  - Webots: https://docs.google.com/document/d/1WJeDCwA8Hf5d19iUAJH6PS8BVx5zR-uCibAvhBIBd_E/edit

10/2/2024
- Webots:
- attempted to get ros controllers to communicate with Webots
- tried solving by changing firewall settings
- context: Cameron and Israel (me) are trying to use ROS2 on Webots
  - however the Windows version of Webots doesn't support ROS2, only the Linux version :(
  - so what we're trying to do is run the Webots program on Windows side (to make use of graphics drivers/hardware acceleration for rendering and physics)
  - while running ROS2 Webots stuff on WSL linux side.
  - however the Webots Windows client can't connect to the WSL Linux ROS2 robot nodes, most likely due to a Windows Firewall conflict.
  - Here's the tutorial we're following: https://docs.ros.org/en/humble/Tutorials/Advanced/Simulators/Webots/Installation-Windows.html)
  - GitHub issue that's same as us: https://github.com/cyberbotics/webots_ros2/issues/759
- still working/trying to solve issue as of 10/2/24.

- OpenCV + ROS2 integration using AutomaticAddison tutorial: (Eric Grun)
https://automaticaddison.com/getting-started-with-opencv-in-ros-2-foxy-fitzroy-python/
  - Webcam integration through Multipass: 
    - Need to stream webcam to multipass instance using ffmpg
    brew install ffmpg
    - Then can stream to the multipass instance with this: 
    ffmpeg -f avfoundation -framerate 30 -video_size 640x480 -i "0" -f mpegts udp://192.168.64.2:1234
    - (NOTE: replace 192.168.64.2 with the IP address of the multipass instance)
      - can find IP address in macOS terminal with: 
      multipass list
    - Once streaming the webcam, you need to replace the webcam id from 0 in the python code to udp://@:1234
    self.cap = cv2.VideoCapture('udp://@:1234')
    - Image publisher and subscriber works, but doesn't display the webcam footage yet as of 10/2/24
    - Keep in mind, need to run subscriber with the following line to keep it from crashing because of no window popup
    xvfb-run -a ros2 run cv_basics img_subscriber

9/30/2024
  - Mac: Editing ROS2 Code through VS Studio (Eric Grun)
    - install extension within vs-code: Remote - SSH
    - create ssh key with this line: set no password by clicking enter until it is created
      ssh-keygen -t rsa -b 4096
    - copy paste ssh key from this line: 
      cat ~/.ssh/id_rsa.pub
    - within multipass ros2 shell run this to edit the ssh keys file: 
      nano ~/.ssh/authorized_keys
    - copy paste the ssh key within a new line of the nano file
    - run these lines within multipass after editing the authorized_keys file
      chmod 700 ~/.ssh
      chmod 600 ~/.ssh/authorized_keys
    - now try to connect via ssh to the multipass shell with this in the mac terminal
      ssh ubuntu@192.168.64.2
    - if that works, connect via ssh in VS Code from the bottom left button and connect with the same line as above
